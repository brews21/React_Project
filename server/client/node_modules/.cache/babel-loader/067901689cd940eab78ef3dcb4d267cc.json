{"ast":null,"code":"var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport default (function (emails) {\n  var invalidEmailsArray = emails.split(\",\").map(function (email) {\n    return email.trim();\n  }).filter(function (email) {\n    return !re.test(email);\n  }); // if an emial fails the emailRegex the do not keep that email\n\n  if (invalidEmailsArray.length) {\n    return \"These emails are invalid \".concat(invalidEmailsArray);\n  }\n});","map":{"version":3,"sources":["D:\\MyFiles\\dev\\React_Project\\server\\client\\src\\utils\\validateEmails.js"],"names":["re","emails","invalidEmailsArray","split","map","email","trim","filter","test","length"],"mappings":"AAAA,IAAMA,EAAE,GAAG,wJAAX;AAEA,gBAAe,UAAAC,MAAM,EAAI;AACvB,MAAMC,kBAAkB,GAAGD,MAAM,CAC9BE,KADwB,CAClB,GADkB,EAExBC,GAFwB,CAEpB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,EAAJ;AAAA,GAFe,EAGxBC,MAHwB,CAGjB,UAAAF,KAAK;AAAA,WAAI,CAACL,EAAE,CAACQ,IAAH,CAAQH,KAAR,CAAL;AAAA,GAHY,CAA3B,CADuB,CAKvB;;AAEA,MAAIH,kBAAkB,CAACO,MAAvB,EAA+B;AAC7B,8CAAmCP,kBAAnC;AACD;AACF,CAVD","sourcesContent":["const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default emails => {\r\n  const invalidEmailsArray = emails\r\n    .split(\",\")\r\n    .map(email => email.trim())\r\n    .filter(email => !re.test(email));\r\n  // if an emial fails the emailRegex the do not keep that email\r\n\r\n  if (invalidEmailsArray.length) {\r\n    return `These emails are invalid ${invalidEmailsArray}`;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}